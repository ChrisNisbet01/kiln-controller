# logging
log_level: info
log_format: "%(asctime)s %(levelname)s %(name)s: %(message)s"

# web server
listening_ip:   0.0.0.0
listening_port: 8081

### Cost Estimate
"kwh_rate":    0.30 # Rate in currency_type to calculate cost to run job
currency_type: $ # Currency Symbol to show when calculating cost to run job

########################################################################
#
# duty cycle of the entire system in seconds
#
# Every N seconds a decision is made about switching the relay[s]
# on & off and for how long. The thermocouple is read
# temperature_average_samples times during and the average value is used.
sensor_time_wait: 2


simulated: true
########################################################################
#
#   Time and Temperature parameters
#
# If you change the temp_scale, all settings in this file are assumed to
# be in that scale.

temp_scale:          c  # c = Celsius | f = Fahrenheit - Unit to display
time_scale_slope:    h  # s = Seconds | m = Minutes | h = Hours - Slope displayed in temp_scale per time_scale_slope
time_scale_profile:  m  # s = Seconds | m = Minutes | h = Hours - Enter and view target time in time_scale_profile

# emergency shutoff the profile if this temp is reached or exceeded.
# This just shuts off the profile. If your SSR is working, your kiln will
# naturally cool off. If your SSR has failed/shorted/closed circuit, this
# means your kiln receives full power until your house burns down.
# this should not replace you watching your kiln or use of a kiln-sitter
emergency_shutoff_temp: 2264  # cone 7

# If the kiln cannot heat or cool fast enough and is off by more than
# kiln_must_catch_up_max_error  the entire schedule is shifted until
# the desired temperature is reached. If your kiln cannot attain the
# wanted temperature, the schedule will run forever. This is often used
# for heating as fast as possible in a section of a kiln schedule/profile.
kiln_must_catch_up: true
kiln_must_catch_up_max_error: 5  # degrees

# There are all kinds of emergencies that can happen including:
# - temperature is too high (emergency_shutoff_temp exceeded)
# - lost connection to thermocouple
# - unknown error with thermocouple
# - too many errors in a short period from thermocouple
# and some people just want to ignore all of that and just log the emergencies but do not quit
ignore_emergencies: false


########################################################################
#
#   PID parameters
#
# These parameters control kiln temperature change. You must tune them
# to work well with your specific kiln.
# Note that the integral pid_ki is
# inverted so that a smaller number means more integral action.
pid:
  kp: 25   # Proportional
  ki: 200  # Integral
  kd: 200  # Derivative
  ########################################################################
  #
  # Initial heating and Integral Windup
  #
  # During initial heating, if the temperature is constantly under the
  # setpoint, large amounts of Integral can accumulate. This accumulation
  # causes the kiln to run above the setpoint for potentially a long
  # period of time. These settings allow integral accumulation only when
  # the temperature is close to the setpoint. This applies only to the integral.
  stop_integral_windup: true


########################################################################
#
#   Simulation parameters
simulate:
  speed:      10       # The speed the simulator runs at (1 ~= realtime, >1 = faster)
  t_env:      21.0     # deg C
  c_heat:     100.0    # J/K  heat capacity of heat element
  c_oven:     5000.0   # J/K  heat capacity of oven
  p_heat:     10000.0  # W    heating power of oven
  R_o_nocool: 0.3      # K/W  thermal resistance oven -> environment
  R_o_cool:   0.05     # K/W  " with cooling
  R_ho_noair: 0.1      # K/W  thermal resistance heat element -> oven
  R_ho_air:   0.05     # K/W  " with internal air circulation
