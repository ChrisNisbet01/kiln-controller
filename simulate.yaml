!Config
# logging
log_level: info
log_format: "%(asctime)s %(levelname)s %(name)s: %(message)s"

# web server
listening_ip:   0.0.0.0
listening_port: 8081

### Cost Estimate
kwh_rate:      0.30 # Rate in currency_type to calculate cost to run job
currency_type: $ # Currency Symbol to show when calculating cost to run job

########################################################################
#
# duty cycle of the entire system in seconds
#
# Every N seconds a decision is made about switching the relay[s]
# on & off and for how long. The thermocouple is read
# temperature_average_samples times during and the average value is used.
sensor_time_wait: 2


simulated: true
########################################################################
#
#   GPIO Setup (BCM SoC Numbering Schema)
#
#   Check the RasPi docs to see where these GPIOs are
#   connected on the P1 header for your board type/rev.
#   These were tested on a Pi B Rev2 but of course you
#   can use whichever GPIO you prefer/have available.

### Outputs
outputs: !Outputs
  # type: Possible values are:
  # "pi": regular Raspberry Pi GPIO
  # "piface": "Piface GPIO hat"
  type: pi
  enable: 0 # Master enable contactor
  heat: 1   # Switches zero-cross solid-state-relay

thermocouple: !Thermocouple
  ### Thermocouple Adapter selection:
  # Valid types:
  # MAX31855
  # MAX31856
  type: MAX31855
  MAX31856_TYPE: MAX31856_S_TYPE

  ### SPI type.
  # Valid types:
  # PI_HW_SPI - Hardware SPI (bus 0, device 0)
  # BITBANG_SPI - Bit bang SPI (uses pins defined in gpio section).
  spi_type: PI_HW_SPI

  ### Thermocouple Connection (using bit-bang interfaces)
  gpio: !ThermocoupleGPIO
    sensor_cs: 27
    sensor_clock: 22
    sensor_data: 17
    sensor_di: 10  # only used with max31856

  # thermocouple offset
  # If you put your thermocouple in ice water, and it reads 36F, you can
  # set this offset to -4 to compensate.  This probably means you have a
  # cheap thermocouple.  Invest in a better thermocouple.
  offset: 0.0

  # some kilns/thermocouples start erroneously reporting "short"
  # errors at higher temperatures due to plasma forming in the kiln.
  # Set this to False to ignore these errors and assume the temperature
  # reading was correct anyway
  honour_short_errors: false

  # number of samples of temperature to average.
  # If you suffer from the high temperature kiln issue and have set
  # honour_thermocouple_short_errors to False,
  # you will likely need to increase this (eg I use 40)
  temperature_average_samples: 40

  # Thermocouple AC frequency filtering - set to True if in a 50Hz locale, else leave at False for 60Hz locale
  ac_freq_50hz: false


########################################################################
#
#   PID parameters
#
# These parameters control kiln temperature change. You must tune them
# to work well with your specific kiln.
pid: !PID
  kp: 25     # Proportional
  ki: 0.005  # Integral
  kd: 200    # Derivative

########################################################################
#
#   Time and Temperature parameters
#
# If you change the temp_scale, all settings in this file are assumed to
# be in that scale.

temp_scale:          c  # c = Celsius | f = Fahrenheit - Unit to display
time_scale_slope:    h  # s = Seconds | m = Minutes | h = Hours - Slope displayed in temp_scale per time_scale_slope
time_scale_profile:  m  # s = Seconds | m = Minutes | h = Hours - Enter and view target time in time_scale_profile

# emergency shutoff the profile if this temp is reached or exceeded.
# This just shuts off the profile. If your SSR is working, your kiln will
# naturally cool off. If your SSR has failed/shorted/closed circuit, this
# means your kiln receives full power until your house burns down.
# this should not replace you watching your kiln or use of a kiln-sitter
emergency_shutoff_temp: 2264  # cone 7

# If the current temperature is outside the pid control window,
# delay the schedule until it does back inside. This allows for heating
# and cooling as fast as possible and not continuing until temp is reached.
kiln_must_catch_up: true # Default is true

# This setting is required.
# This setting defines the window within which PID control occurs.
# Outside this window (N degrees below or above the current target)
# the elements are either 100% on because the kiln is too cold
# or 100% off because the kiln is too hot. No integral builds up
# outside the window. The bigger you make the window, the more
# integral you will accumulate.
pid_control_window: 10  #degrees. Default is 10.

# There are all kinds of emergencies that can happen including:
# - temperature is too high (emergency_shutoff_temp exceeded)
# - lost connection to thermocouple
# - unknown error with thermocouple
# - too many errors in a short period from thermocouple
# and some people just want to ignore all of that and just log the emergencies but do not quit
ignore_emergencies: false


########################################################################
#
#   Simulation parameters
simulate: !Simulate
  speed:      1        # The speed the simulator runs at (1 ~= realtime, >1 = faster)
  t_env:      21.0     # deg C
  c_heat:     100.0    # J/K  heat capacity of heat element
  c_oven:     5000.0   # J/K  heat capacity of oven
  p_heat:     10000.0  # W    heating power of oven
  R_o_nocool: 0.3      # K/W  thermal resistance oven -> environment
  R_o_cool:   0.05     # K/W  " with cooling
  R_ho_noair: 0.1      # K/W  thermal resistance heat element -> oven
  R_ho_air:   0.05     # K/W  " with internal air circulation
